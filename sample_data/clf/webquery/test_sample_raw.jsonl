{"idx": "webquery-test-881", "doc": "how to make a list of lists in python", "code": "def flatten_list(x: List[Any]) -> List[Any]:     \"\"\"     Converts a list of lists into a flat list.          Args:         x: list of lists       Returns:         flat list              As per     http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python      \"\"\"  # noqa     return [item for sublist in x for item in sublist]"}
{"idx": "webquery-test-887", "doc": "how to test of a list contains something in python", "code": "def _check_elements_equal(lst):     \"\"\"     Returns true if all of the elements in the list are equal.     \"\"\"     assert isinstance(lst, list), \"Input value must be a list.\"     return not lst or lst.count(lst[0]) == len(lst)"}
{"idx": "webquery-test-846", "doc": "how to return several values without using tuple in python", "code": "def get_value_tuple(self):         \"\"\"         Returns a tuple of the color's values (in order). For example,         an LabColor object will return (lab_l, lab_a, lab_b), where each         member of the tuple is the float value for said variable.         \"\"\"         retval = tuple()         for val in self.VALUES:             retval += (getattr(self, val),)         return retval"}
{"idx": "webquery-test-391", "doc": "python elementtree line break after element", "code": "def add_newlines(tree):     \"\"\"     Add a newline character to the end of each <br> element.     \"\"\"     for br in tree.xpath(\"*//br\"):         br.tail = u\"\\n\" + br.tail if br.tail else u\"\\n\""}
{"idx": "webquery-test-33", "doc": "how to slice rows in a list python", "code": "def iget_list_column_slice(list_, start=None, stop=None, stride=None):     \"\"\" iterator version of get_list_column \"\"\"     if isinstance(start, slice):         slice_ = start     else:         slice_ = slice(start, stop, stride)     return (row[slice_] for row in list_)"}
{"idx": "webquery-test-902", "doc": "how to index arrays in python", "code": "def _transform_triple_numpy(x):     \"\"\"Transform triple index into a 1-D numpy array.\"\"\"     return np.array([x.head, x.relation, x.tail], dtype=np.int64)"}
{"idx": "webquery-test-704", "doc": "how to use a vector loop in python", "code": "def norm_vec(vector):     \"\"\"Normalize the length of a vector to one\"\"\"     assert len(vector) == 3     v = np.array(vector)     return v/np.sqrt(np.sum(v**2))"}
{"idx": "webquery-test-665", "doc": "put two lists together python as dictionary", "code": "def list2dict(lst):     \"\"\"Takes a list of (key,value) pairs and turns it into a dict.\"\"\"      dic = {}     for k,v in lst: dic[k] = v     return dic"}
{"idx": "webquery-test-857", "doc": "python test if value is number", "code": "def get_number(s, cast=int):     \"\"\"     Try to get a number out of a string, and cast it.     \"\"\"     import string     d = \"\".join(x for x in str(s) if x in string.digits)     return cast(d)"}
{"idx": "webquery-test-890", "doc": "python take tuple as an input return new tuple as output", "code": "def as_tuple(self, value):         \"\"\"Utility function which converts lists to tuples.\"\"\"         if isinstance(value, list):             value = tuple(value)         return value"}
